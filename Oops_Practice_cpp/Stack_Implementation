#include<iostream>
using namespace std;
class Stack{
    public:
           //Data Member
           int *arr;
           int top;
           int size;
           Stack(int size)
           {
               this->size=size;
               arr=new int(size);
               top=-1;
           }
           //Member Function
           void push(int element)
           {
               if(size-top>1)
               {
                   top++;
                   arr[top]=element;
               }
               else
               {
                   cout<<"Stack Overflow"<<endl;//Means Stack is Full.hence,cannot insert element.
               }
           }
           void pop()
           {
               if(top>=0)
               {
                   top--;
               }
               else
               {
                   cout<<"Stack underflow"<<endl;//Means Stack is empty.hence,cannot delete element.
               }
           }
           void peek()
           {
               if(top>=0)
               {
                   cout<<"Topmost element in stack :"<<arr[top]<<endl;
               }
               else
               {
                   cout<<"Stack is empty"<<endl;
               }
           }
           bool empty()
           {
               if(top==-1)
               {
                   return true;
               }
               else 
               {
                   return false;
               }
           }
           void display()
           {
               for(int i=0;i<=top;i++)
               {
                   cout<<arr[i]<<" ";
               }
               cout<<endl;
           }
};
int main()
{

  Stack s(5);
  s.push(10);
  s.push(20);
  s.push(30);
  s.push(40);
  s.push(50);
  //s.push(60);
  // s.push(70);
 // s.push(80);
  if(s.empty())
  {
      cout<<"Stack is empty"<<endl;
  }
  else
  {
      cout<<"Stack is not empty"<<endl;
  }
  s.display();
  s.peek();
  s.pop();
  s.display();
  s.peek();
}
