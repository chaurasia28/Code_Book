#include<iostream>
#include<queue>
#include<algorithm>
using namespace std;
class Node
{
    public:int data;
           Node* left;
           Node* right;
           Node(int data)
           {
              this->data=data;
              this->left=NULL;
              this->right=NULL;
           }
};
void buildtree(Node* &root)
{
    int data;
    cin>>data;
    if(data==-1)
    {
        return ;
    }
    queue<Node*>q;
    root=new Node(data);
    q.push(root);
    while(!q.empty())
    {
        Node* temp=q.front();
        q.pop();
        int leftnode,rightnode;
        cin>>leftnode;
        if(leftnode!=-1)
        {
            temp->left=new Node(leftnode);
            q.push(temp->left);
        }
        cin>>rightnode;
        if(rightnode!=-1)
        {
            temp->right=new Node(rightnode);
            q.push(temp->right);
        }
    }
}
void inorder(Node* &root)
{
    if(root==NULL)
    {
        return;
    }
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}
void preorder(Node* &root)
{
    if(root==NULL)
    {
        return;
    }
    cout<<root->data<<" ";
    preorder(root->left);
    preorder(root->right);
}
void postorder(Node* &root)
{
    if(root==NULL)
    {
        return;
    }
    postorder(root->left);
    postorder(root->right);
    cout<<root->data<<" ";
}
int height(Node* &root)
{
    if(root==NULL)
    {
        return 0;
    }
    int left=height(root->left);
    int right=height(root->right);
    int maxi=max(left,right)+1;
    return maxi;
}
int main()
{
    Node* root=NULL;
    buildtree(root);
    cout<<endl;
    inorder(root);
    cout<<endl;
    preorder(root);
    cout<<endl;
    postorder(root);
    cout<<"Height:"<<height(root)<<endl;
}