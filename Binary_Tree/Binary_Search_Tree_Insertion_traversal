#include<iostream>
#include<queue>
using namespace std;
class Node
{
  public:
         int data;
         Node* left;
         Node* right;
         Node(int data)
         {
             this->data=data;
             this->left=NULL;
             this->right=NULL;
         }
         
};
Node* insert(Node* root,int data)
{
    if(root==NULL)
    {
        return new Node(data);
    }
    if(root->data<=data)
    {
        root->right= insert(root->right,data);
    }
    else
    {
        root->left= insert(root->left,data);
    }
    return root;
}
void levelorder(Node* &root)
{
    queue<Node*>q;
    q.push(root);
    while(!q.empty())
    {
        Node* front=q.front();
        q.pop();
        cout<<front->data<<" ";
        if(front->left!=NULL)
        {
            q.push(front->left);
        }
        if(front->right!=NULL)
        {
            q.push(front->right);
        }
    }
}
void inorder(Node* &root)
{
    if(root==NULL)
    {
        return;
    }
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}
void preorder(Node* &root)
{
    if(root==NULL)
    {
        return;
    }
    cout<<root->data<<" ";
    preorder(root->left);
    preorder(root->right);
}
void postorder(Node* &root)
{
    if(root==NULL)
    {
        return;
    }
    postorder(root->left);
    postorder(root->right);
    cout<<root->data<<" ";
}
int main()
{
    Node* root=NULL;
    int n;
    cin>>n;
    for(int i=0;i<n;i++)
    {
        int data;
        cin>>data;
        root=insert(root,data);
    }
    cout<<"Level Order Print:"<<endl;
    levelorder(root);
    cout<<endl<<"Inorder Print:"<<endl;
    inorder(root);
    cout<<endl<<"Preorder Print:"<<endl;
    preorder(root);
    cout<<endl<<"Postorder Print:"<<endl;
    postorder(root);
    
}