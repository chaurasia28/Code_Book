#include<iostream>
#include<queue>
using namespace std;
class Node
{
    public:int data;
           Node* left;
           Node* right;
           Node(int data)
           {
               this->data=data;
               this->left=NULL;
               this->right=NULL;
           }
};
Node* buildtree(Node* &root)
{
    int data;
    cout<<"Enter data"<<endl;
    cin>>data;
    root=new Node(data);
    if(data==-1)
    {
        return NULL;
    }
    cout<<"Enter elements that need to insert at left of "<<data<<endl;
    root->left=buildtree(root->left);
    cout<<"Enter elements that need to insert at right of "<<data<<endl;
    root->right=buildtree(root->right);
    return root;
}
void levelprint(Node* root)
{
    queue<Node*>q;
    q.push(root);
    q.push(NULL);
    while(!q.empty())
    {
        Node* temp=q.front();
        q.pop();
        if(temp==NULL)
        {
            cout<<endl;
            if(!q.empty())
            {
                q.push(NULL);
            }
        }
        else
        {
            cout<<temp->data<<" ";
            if(temp->left!=NULL)
            {
                q.push(temp->left);
            }
            if(temp->right!=NULL)
            {
                q.push(temp->right);
            }
        }
    }
}
int main()
{
    Node* root=NULL;
    root=buildtree(root);
    cout<<"Binary tree"<<endl;
    levelprint(root);
}