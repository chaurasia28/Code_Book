#include<iostream>
using namespace std;
class Node
{
    public:
          int data;
          Node* next;
          Node* prev;
          //constructor
          Node(int d)
          {
              this->data=d;
              this->next=NULL;
              this->prev=NULL;
          }
           
};
void insertathead(Node* &head,Node* &tail,int d)
{
    Node* temp=new Node(d);
    if(head==NULL)
    {
        head=tail=temp;
        return;
    }
    else
    {
        
        temp->next=head;
        head->prev=temp;
        head=temp;
    }
}
void insertattail(Node* &head,Node* &tail,int d)
{
    Node* temp=new Node(d);
    if(tail==NULL)
    {
        head=tail=temp;
    }
    else
    {
        tail->next=temp;
        temp->prev=tail;
        tail=temp;
    }
}
void insertatmiddle(Node* &head,Node* &tail,int d,int position)
{
    //Insert at start
    if(position==1)
    {
        insertathead(head,tail,d);
        return;
    }
    int cnt=1;
    Node* temp=head;
    while(cnt<position-1)
    {
        temp=temp->next;
        cnt++;
    }
    //Insert at tail
    if(temp->next==NULL)
    {
        insertattail(head,tail,d);
        return;
    }
    Node* nodetoinsert=new Node(d);
    nodetoinsert->next=temp->next;
    temp->next->prev=nodetoinsert;
    temp->next=nodetoinsert;
    nodetoinsert->prev=temp;
}
void print(Node* &head)
{
    Node* temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<"<=>";
        temp=temp->next;
    }
}
int length(Node* &head)
{
    int len=0;
    Node* temp=head;
    while(temp!=NULL)
    {
        len++;
        temp=temp->next;
    }
    return len;
}
int main()
{
    Node* head=NULL;
    Node* tail=NULL;
    insertattail(head,tail,1);
    insertattail(head,tail,2);
    insertattail(head,tail,3);
    insertattail(head,tail,4);
    insertatmiddle(head,tail,5,5);
    insertatmiddle(head,tail,100,3);
    insertathead(head,tail,0);
    print(head);
    cout<<endl;
    cout<<"Total Node:"<<length(head);
}