#include<iostream>
using namespace std;
class Node{
    public:
          int data;
          Node* next;
          Node(int data)
          {
            this->data=data;
            this->next=NULL;
          }
          ~Node()
          {
              int val=this->data;
              if(this->next!=NULL)
              {
                  delete next;
                  this->next=NULL;
              }
              cout<<"Node delete has data "<<val<<endl;
          }
};
void insertNode(Node* &tail,int element,int d)
{
    //Linked List is empty
    if(tail==NULL)
    {
        Node* temp=new Node(d);
        tail=temp;
        temp->next=temp;
    }
    else
    {
        //assuming element is present
       Node* temp=new Node(d);
       Node* curr=tail;
       while(curr->data!=element)
       {
           curr=curr->next;
       }
       temp->next=curr->next;
        curr->next=temp;
    }
}
void print(Node* &tail)
{
    Node* temp=tail;
    do{
        cout<<temp->data<<" ";
        temp=temp->next;
    }while(temp!=tail);
}
void deleteNode(Node*&tail,int value)
{
    //Linked List is empty
    if(tail==NULL)
    {
        cout<<"ERROR";
        return;
    }
    else
    {
        Node* prev=tail;
        Node* curr=prev->next;
        while(curr->data!=value)
        {
            prev=curr;
            curr=curr->next;
        }
        prev->next=curr->next;
        //If 1 Node
        if(curr==prev)
        {
            tail=NULL;
        }
        //more than and equal 2
        if(tail==curr)
        {
            tail=prev;
        }
        curr->next=NULL;
        delete curr;
    }
}
int main()
{
    Node* tail=NULL;
    insertNode(tail,1,1);
    insertNode(tail,1,2);
    insertNode(tail,2,3);
    insertNode(tail,3,4);
    insertNode(tail,4,5);
    print(tail);
    cout<<endl;
    deleteNode(tail,3);
    print(tail);
}