#include<iostream>
#include<limits.h>
#include<algorithm>
#include<vector>
#include<stack>
using namespace std;
vector<int>nextsmaller(int *height,int n)
{
    vector<int>ans(n);
    stack<int>s;
    s.push(-1);
    for(int i=n-1;i>=0;i--)
    {
        int curr=height[i];
        while(s.top()!=-1 && height[s.top()]>=curr)
        {
            s.pop();
        }
        ans[i]=s.top();
        s.push(i);
    }
    return ans;
}
vector<int>prevsmaller(int *height,int n)
{
    vector<int>ans(n);
    stack<int>s;
    s.push(-1);
    for(int i=0;i<n;i++)
    {
        int curr=height[i];
        while(s.top()!=-1 && height[s.top()]>=curr)
        {
            s.pop();
        }
        ans[i]=s.top();
        s.push(i);
    }
    return ans;
}
int solve(int *height,int n)
{
    vector<int>prev(n);
    prev=prevsmaller(height,n);
    vector<int>next(n);
    next=nextsmaller(height,n);
    int area=INT_MIN;
    for(int i=0;i<n;i++)
    {
        int len=height[i];
        if(next[i]==-1)
        {
            next[i]=n;
        }
        int bre=next[i]-prev[i]-1;
        int newarea=len*bre;
        area=max(area,newarea);
    }
    return area;
}
int main()
{
    int height[100];
    int n;
    cin>>n;
    for(int i=0;i<n;i++)
    {
        cin>>height[i];
    }
   int ans= solve(height,n);
   cout<<"Maximum area:"<<ans<<endl;
}