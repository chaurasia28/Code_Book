#include<iostream>
using namespace std;
class queue
{
   public:
          int *arr;
          int size;
          int qfront;
          int rear;
          queue(int n)
          {
              size=n;
              arr=new int[n];
              qfront=0;
              rear=0;
          }
          void push(int data)
          {
              if(rear==size)
              {
                  cout<<"Queue Overflow "<<endl;
              }
              else
              {
                 arr[rear]=data;
                 rear++;
              }
          }
          int pop()
          {
              int ans;
              if(qfront==rear)
              {
                  cout<<"Queue is empty so cannot popped out"<<endl;
              }
              else
              {
                  ans=arr[qfront];
                  arr[qfront]=-1;
                  qfront++;
                  if(qfront==rear)
                  {
                      qfront=0;
                      rear=0;
                  }
              }
               return ans;
          }
          bool empty()
          {
              if(rear==qfront)
              {
                  return true;
              }
              else
              {
                  return false;
              }
          }
          int qrfront()
          {
              if(rear==qfront)
              {
                  return -1;
              }
              return arr[qfront];
          }
};
int main()
{
    int n;
    cin>>n;
    queue q1(n);
    for(int i=0;i<n;i++)
    {
        int data;
        cin>>data;
        q1.push(data);
    }
    for(int i=0;i<n;i++)
    {
        cout<<q1.qrfront()<<" ";
        q1.pop();
    }cout<<endl;
    if(q1.empty())
    {
        cout<<"Queue is empty"<<endl;
    }
    else
    {
        cout<<"Queue is not empty"<<endl;
    }
}